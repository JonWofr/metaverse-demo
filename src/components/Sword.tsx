/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/assets/models/sword.glb -o src/components/Sword.tsx -t -s -r public
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

const SWORD_MODEL_IPFS_URL = `${process.env.NEXT_PUBLIC_INFURA_IPFS_GATEWAY_BASE_URL}/bafybeih7455dnvglj6aur6xzhewlpymmxpmzd5ailld4kjfmaqyfdszvvm/1`;

type GLTFResult = GLTF & {
  nodes: {
    sword_1: THREE.Mesh;
    sword_2: THREE.Mesh;
    sword_3: THREE.Mesh;
    sword_4: THREE.Mesh;
  };
  materials: {
    ['textile.006']: THREE.MeshStandardMaterial;
    ['stone.004']: THREE.MeshStandardMaterial;
    ['wood.022']: THREE.MeshStandardMaterial;
    ['_defaultMat.005']: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(SWORD_MODEL_IPFS_URL) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[-2.663, 0.068, -8.576]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sword_1.geometry}
          material={materials['textile.006']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sword_2.geometry}
          material={materials['stone.004']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sword_3.geometry}
          material={materials['wood.022']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sword_4.geometry}
          material={materials['_defaultMat.005']}
        />
      </group>
    </group>
  );
}

useGLTF.preload(SWORD_MODEL_IPFS_URL);
