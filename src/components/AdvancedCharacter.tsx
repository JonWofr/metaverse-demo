/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/assets/models/advancedCharacter.gltf -o src/components/AdvancedCharacter.tsx -t -s -r public
*/

import * as THREE from 'three';
import React, { forwardRef, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useTexture } from '@react-three/drei';

type GLTFResult = GLTF & {
  nodes: {
    Body1: THREE.Mesh;
    Head1: THREE.Mesh;
    ArmLeft1: THREE.Mesh;
    ArmRight1: THREE.Mesh;
    LegLeft1: THREE.Mesh;
    LegRight1: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

export const Model = forwardRef<THREE.Group, JSX.IntrinsicElements['group']>(
  (props, ref) => {
    const { nodes } = useGLTF(
      '/assets/models/advancedCharacter.gltf'
    ) as GLTFResult;

    const texture = useTexture('/assets/textures/skin_manAlternative.png');
    texture.flipY = false;
    texture.colorSpace = THREE.SRGBColorSpace;

    const material = new THREE.MeshStandardMaterial({
      map: texture,
    });

    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body1.geometry}
          material={material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Head1.geometry}
          material={material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ArmLeft1.geometry}
          material={material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ArmRight1.geometry}
          material={material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.LegLeft1.geometry}
          material={material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.LegRight1.geometry}
          material={material}
        />
        {props.children}
      </group>
    );
  }
);

Model.displayName = 'Model';

useGLTF.preload('/assets/models/advancedCharacter.gltf');
